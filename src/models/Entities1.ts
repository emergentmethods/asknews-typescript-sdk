/* tslint:disable */
/* eslint-disable */
/**
 * AskNews API
 * AskNews API
 *
 * The version of the OpenAPI document: 0.19.6
 * Contact: contact@emergentmethods.ai
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Entities1
 */
export interface Entities1 {
    /**
     * 
     * @type {Array<string | null>}
     * @memberof Entities1
     */
    person?: Array<string | null>;
    /**
     * 
     * @type {Array<string>}
     * @memberof Entities1
     */
    organization?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof Entities1
     */
    location?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof Entities1
     */
    nationality?: Array<string>;
    /**
     * 
     * @type {Array<string | null>}
     * @memberof Entities1
     */
    date?: Array<string | null>;
    /**
     * 
     * @type {Array<string | null>}
     * @memberof Entities1
     */
    event?: Array<string | null>;
    /**
     * 
     * @type {Array<string>}
     * @memberof Entities1
     */
    money?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof Entities1
     */
    law?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof Entities1
     */
    quantity?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof Entities1
     */
    time?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof Entities1
     */
    sports?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof Entities1
     */
    politics?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof Entities1
     */
    title?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof Entities1
     */
    number?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof Entities1
     */
    arms?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof Entities1
     */
    product?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof Entities1
     */
    media?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof Entities1
     */
    transportation?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof Entities1
     */
    religion?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof Entities1
     */
    technology?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof Entities1
     */
    space?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof Entities1
     */
    medicine?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof Entities1
     */
    language?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof Entities1
     */
    science?: Array<string>;
}

/**
 * Check if a given object implements the Entities1 interface.
 */
export function instanceOfEntities1(value: object): value is Entities1 {
    return true;
}

export function Entities1FromJSON(json: any): Entities1 {
    return Entities1FromJSONTyped(json, false);
}

export function Entities1FromJSONTyped(json: any, ignoreDiscriminator: boolean): Entities1 {
    if (json == null) {
        return json;
    }
    return {
        
        'person': json['Person'] == null ? undefined : json['Person'],
        'organization': json['Organization'] == null ? undefined : json['Organization'],
        'location': json['Location'] == null ? undefined : json['Location'],
        'nationality': json['Nationality'] == null ? undefined : json['Nationality'],
        'date': json['Date'] == null ? undefined : json['Date'],
        'event': json['Event'] == null ? undefined : json['Event'],
        'money': json['Money'] == null ? undefined : json['Money'],
        'law': json['Law'] == null ? undefined : json['Law'],
        'quantity': json['Quantity'] == null ? undefined : json['Quantity'],
        'time': json['Time'] == null ? undefined : json['Time'],
        'sports': json['Sports'] == null ? undefined : json['Sports'],
        'politics': json['Politics'] == null ? undefined : json['Politics'],
        'title': json['Title'] == null ? undefined : json['Title'],
        'number': json['Number'] == null ? undefined : json['Number'],
        'arms': json['Arms'] == null ? undefined : json['Arms'],
        'product': json['Product'] == null ? undefined : json['Product'],
        'media': json['Media'] == null ? undefined : json['Media'],
        'transportation': json['Transportation'] == null ? undefined : json['Transportation'],
        'religion': json['Religion'] == null ? undefined : json['Religion'],
        'technology': json['Technology'] == null ? undefined : json['Technology'],
        'space': json['Space'] == null ? undefined : json['Space'],
        'medicine': json['Medicine'] == null ? undefined : json['Medicine'],
        'language': json['Language'] == null ? undefined : json['Language'],
        'science': json['Science'] == null ? undefined : json['Science'],
    };
}

export function Entities1ToJSON(json: any): Entities1 {
    return Entities1ToJSONTyped(json, false);
}

export function Entities1ToJSONTyped(value?: Entities1 | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'Person': value['person'],
        'Organization': value['organization'],
        'Location': value['location'],
        'Nationality': value['nationality'],
        'Date': value['date'],
        'Event': value['event'],
        'Money': value['money'],
        'Law': value['law'],
        'Quantity': value['quantity'],
        'Time': value['time'],
        'Sports': value['sports'],
        'Politics': value['politics'],
        'Title': value['title'],
        'Number': value['number'],
        'Arms': value['arms'],
        'Product': value['product'],
        'Media': value['media'],
        'Transportation': value['transportation'],
        'Religion': value['religion'],
        'Technology': value['technology'],
        'Space': value['space'],
        'Medicine': value['medicine'],
        'Language': value['language'],
        'Science': value['science'],
    };
}

