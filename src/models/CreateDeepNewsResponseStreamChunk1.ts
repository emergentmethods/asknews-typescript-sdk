/* tslint:disable */
/* eslint-disable */
/**
 * AskNews API
 * AskNews API
 *
 * The version of the OpenAPI document: 0.22.10
 * Contact: contact@emergentmethods.ai
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CreateDeepNewsResponseUsage1 } from './CreateDeepNewsResponseUsage1';
import {
    CreateDeepNewsResponseUsage1FromJSON,
    CreateDeepNewsResponseUsage1FromJSONTyped,
    CreateDeepNewsResponseUsage1ToJSON,
    CreateDeepNewsResponseUsage1ToJSONTyped,
} from './CreateDeepNewsResponseUsage1';
import type { CreateDeepNewsResponseStreamChunkChoice1 } from './CreateDeepNewsResponseStreamChunkChoice1';
import {
    CreateDeepNewsResponseStreamChunkChoice1FromJSON,
    CreateDeepNewsResponseStreamChunkChoice1FromJSONTyped,
    CreateDeepNewsResponseStreamChunkChoice1ToJSON,
    CreateDeepNewsResponseStreamChunkChoice1ToJSONTyped,
} from './CreateDeepNewsResponseStreamChunkChoice1';

/**
 * 
 * @export
 * @interface CreateDeepNewsResponseStreamChunk1
 */
export interface CreateDeepNewsResponseStreamChunk1 {
    /**
     * 
     * @type {string}
     * @memberof CreateDeepNewsResponseStreamChunk1
     */
    id: string;
    /**
     * 
     * @type {number}
     * @memberof CreateDeepNewsResponseStreamChunk1
     */
    created: number;
    /**
     * 
     * @type {string}
     * @memberof CreateDeepNewsResponseStreamChunk1
     */
    object?: string;
    /**
     * 
     * @type {string}
     * @memberof CreateDeepNewsResponseStreamChunk1
     */
    model?: string;
    /**
     * 
     * @type {CreateDeepNewsResponseUsage1}
     * @memberof CreateDeepNewsResponseStreamChunk1
     */
    usage: CreateDeepNewsResponseUsage1;
    /**
     * 
     * @type {Array<CreateDeepNewsResponseStreamChunkChoice1>}
     * @memberof CreateDeepNewsResponseStreamChunk1
     */
    choices: Array<CreateDeepNewsResponseStreamChunkChoice1>;
}

/**
 * Check if a given object implements the CreateDeepNewsResponseStreamChunk1 interface.
 */
export function instanceOfCreateDeepNewsResponseStreamChunk1(value: object): value is CreateDeepNewsResponseStreamChunk1 {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('created' in value) || value['created'] === undefined) return false;
    if (!('usage' in value) || value['usage'] === undefined) return false;
    if (!('choices' in value) || value['choices'] === undefined) return false;
    return true;
}

export function CreateDeepNewsResponseStreamChunk1FromJSON(json: any): CreateDeepNewsResponseStreamChunk1 {
    return CreateDeepNewsResponseStreamChunk1FromJSONTyped(json, false);
}

export function CreateDeepNewsResponseStreamChunk1FromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateDeepNewsResponseStreamChunk1 {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'created': json['created'],
        'object': json['object'] == null ? undefined : json['object'],
        'model': json['model'] == null ? undefined : json['model'],
        'usage': CreateDeepNewsResponseUsage1FromJSON(json['usage']),
        'choices': ((json['choices'] as Array<any>).map(CreateDeepNewsResponseStreamChunkChoice1FromJSON)),
    };
}

export function CreateDeepNewsResponseStreamChunk1ToJSON(json: any): CreateDeepNewsResponseStreamChunk1 {
    return CreateDeepNewsResponseStreamChunk1ToJSONTyped(json, false);
}

export function CreateDeepNewsResponseStreamChunk1ToJSONTyped(value?: CreateDeepNewsResponseStreamChunk1 | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'created': value['created'],
        'object': value['object'],
        'model': value['model'],
        'usage': CreateDeepNewsResponseUsage1ToJSON(value['usage']),
        'choices': ((value['choices'] as Array<any>).map(CreateDeepNewsResponseStreamChunkChoice1ToJSON)),
    };
}

