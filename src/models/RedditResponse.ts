/* tslint:disable */
/* eslint-disable */
/**
 * AskNews API
 * AskNews API
 *
 * The version of the OpenAPI document: 0.9.1
 * Contact: contact@emergentmethods.ai
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { AsDicts } from './AsDicts';
import {
    AsDictsFromJSON,
    AsDictsFromJSONTyped,
    AsDictsToJSON,
} from './AsDicts';
import type { AsString } from './AsString';
import {
    AsStringFromJSON,
    AsStringFromJSONTyped,
    AsStringToJSON,
} from './AsString';

/**
 * 
 * @export
 * @interface RedditResponse
 */
export interface RedditResponse {
    /**
     * 
     * @type {AsDicts}
     * @memberof RedditResponse
     */
    asDicts?: AsDicts;
    /**
     * 
     * @type {AsString}
     * @memberof RedditResponse
     */
    asString?: AsString;
}

/**
 * Check if a given object implements the RedditResponse interface.
 */
export function instanceOfRedditResponse(value: object): boolean {
    return true;
}

export function RedditResponseFromJSON(json: any): RedditResponse {
    return RedditResponseFromJSONTyped(json, false);
}

export function RedditResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): RedditResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'asDicts': json['as_dicts'] == null ? undefined : AsDictsFromJSON(json['as_dicts']),
        'asString': json['as_string'] == null ? undefined : AsStringFromJSON(json['as_string']),
    };
}

export function RedditResponseToJSON(value?: RedditResponse | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'as_dicts': AsDictsToJSON(value['asDicts']),
        'as_string': AsStringToJSON(value['asString']),
    };
}

