/* tslint:disable */
/* eslint-disable */
/**
 * AskNews API
 * AskNews API
 *
 * The version of the OpenAPI document: 0.18.3
 * Contact: contact@emergentmethods.ai
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { SearchResponseDictItem1 } from './SearchResponseDictItem1';
import {
    SearchResponseDictItem1FromJSON,
    SearchResponseDictItem1FromJSONTyped,
    SearchResponseDictItem1ToJSON,
} from './SearchResponseDictItem1';
import type { WebSearchResult1 } from './WebSearchResult1';
import {
    WebSearchResult1FromJSON,
    WebSearchResult1FromJSONTyped,
    WebSearchResult1ToJSON,
} from './WebSearchResult1';

/**
 * 
 * @export
 * @interface DeepNewsResponseSources1
 */
export interface DeepNewsResponseSources1 {
    /**
     * 
     * @type {Array<SearchResponseDictItem1>}
     * @memberof DeepNewsResponseSources1
     */
    news?: Array<SearchResponseDictItem1>;
    /**
     * 
     * @type {Array<WebSearchResult1>}
     * @memberof DeepNewsResponseSources1
     */
    web?: Array<WebSearchResult1>;
}

/**
 * Check if a given object implements the DeepNewsResponseSources1 interface.
 */
export function instanceOfDeepNewsResponseSources1(value: object): boolean {
    return true;
}

export function DeepNewsResponseSources1FromJSON(json: any): DeepNewsResponseSources1 {
    return DeepNewsResponseSources1FromJSONTyped(json, false);
}

export function DeepNewsResponseSources1FromJSONTyped(json: any, ignoreDiscriminator: boolean): DeepNewsResponseSources1 {
    if (json == null) {
        return json;
    }
    return {
        
        'news': json['news'] == null ? undefined : ((json['news'] as Array<any>).map(SearchResponseDictItem1FromJSON)),
        'web': json['web'] == null ? undefined : ((json['web'] as Array<any>).map(WebSearchResult1FromJSON)),
    };
}

export function DeepNewsResponseSources1ToJSON(value?: DeepNewsResponseSources1 | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'news': value['news'] == null ? undefined : ((value['news'] as Array<any>).map(SearchResponseDictItem1ToJSON)),
        'web': value['web'] == null ? undefined : ((value['web'] as Array<any>).map(WebSearchResult1ToJSON)),
    };
}

