/* tslint:disable */
/* eslint-disable */
/**
 * AskNews API
 * AskNews API
 *
 * The version of the OpenAPI document: 0.16.2
 * Contact: contact@emergentmethods.ai
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ReportRequest
 */
export interface ReportRequest {
    /**
     * 
     * @type {Array<Array<string>>}
     * @memberof ReportRequest
     */
    prompt?: Array<Array<string>>;
    /**
     * 
     * @type {string}
     * @memberof ReportRequest
     */
    model?: ReportRequestModelEnum;
    /**
     * 
     * @type {string}
     * @memberof ReportRequest
     */
    logoUrl?: string;
}


/**
 * @export
 */
export const ReportRequestModelEnum = {
    Gpt4o: 'gpt-4o',
    Gpt4oMini: 'gpt-4o-mini',
    Claude35SonnetLatest: 'claude-3-5-sonnet-latest',
    MetaLlamaMetaLlama31405BInstruct: 'meta-llama/Meta-Llama-3.1-405B-Instruct',
    MetaLlamaMetaLlama3370BInstruct: 'meta-llama/Meta-Llama-3.3-70B-Instruct'
} as const;
export type ReportRequestModelEnum = typeof ReportRequestModelEnum[keyof typeof ReportRequestModelEnum];


/**
 * Check if a given object implements the ReportRequest interface.
 */
export function instanceOfReportRequest(value: object): boolean {
    return true;
}

export function ReportRequestFromJSON(json: any): ReportRequest {
    return ReportRequestFromJSONTyped(json, false);
}

export function ReportRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): ReportRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'prompt': json['prompt'] == null ? undefined : json['prompt'],
        'model': json['model'] == null ? undefined : json['model'],
        'logoUrl': json['logo_url'] == null ? undefined : json['logo_url'],
    };
}

export function ReportRequestToJSON(value?: ReportRequest | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'prompt': value['prompt'],
        'model': value['model'],
        'logo_url': value['logoUrl'],
    };
}

