/* tslint:disable */
/* eslint-disable */
/**
 * AskNews API
 * AskNews API
 *
 * The version of the OpenAPI document: 0.18.2
 * Contact: contact@emergentmethods.ai
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Source } from './Source';
import {
    SourceFromJSON,
    SourceFromJSONTyped,
    SourceToJSON,
} from './Source';

/**
 * 
 * @export
 * @interface CreateDeepNewsResponseStreamSource
 */
export interface CreateDeepNewsResponseStreamSource {
    /**
     * 
     * @type {string}
     * @memberof CreateDeepNewsResponseStreamSource
     */
    id: string;
    /**
     * 
     * @type {number}
     * @memberof CreateDeepNewsResponseStreamSource
     */
    created: number;
    /**
     * 
     * @type {string}
     * @memberof CreateDeepNewsResponseStreamSource
     */
    object?: string;
    /**
     * 
     * @type {Source}
     * @memberof CreateDeepNewsResponseStreamSource
     */
    source: Source;
}

/**
 * Check if a given object implements the CreateDeepNewsResponseStreamSource interface.
 */
export function instanceOfCreateDeepNewsResponseStreamSource(value: object): boolean {
    if (!('id' in value)) return false;
    if (!('created' in value)) return false;
    if (!('source' in value)) return false;
    return true;
}

export function CreateDeepNewsResponseStreamSourceFromJSON(json: any): CreateDeepNewsResponseStreamSource {
    return CreateDeepNewsResponseStreamSourceFromJSONTyped(json, false);
}

export function CreateDeepNewsResponseStreamSourceFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateDeepNewsResponseStreamSource {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'created': json['created'],
        'object': json['object'] == null ? undefined : json['object'],
        'source': SourceFromJSON(json['source']),
    };
}

export function CreateDeepNewsResponseStreamSourceToJSON(value?: CreateDeepNewsResponseStreamSource | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'id': value['id'],
        'created': value['created'],
        'object': value['object'],
        'source': SourceToJSON(value['source']),
    };
}

