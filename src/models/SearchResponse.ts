/* tslint:disable */
/* eslint-disable */
/**
 * AskNews API
 * AskNews API
 *
 * The version of the OpenAPI document: 0.18.19
 * Contact: contact@emergentmethods.ai
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Offset3 } from './Offset3';
import {
    Offset3FromJSON,
    Offset3FromJSONTyped,
    Offset3ToJSON,
    Offset3ToJSONTyped,
} from './Offset3';
import type { SearchResponseDictItem } from './SearchResponseDictItem';
import {
    SearchResponseDictItemFromJSON,
    SearchResponseDictItemFromJSONTyped,
    SearchResponseDictItemToJSON,
    SearchResponseDictItemToJSONTyped,
} from './SearchResponseDictItem';

/**
 * 
 * @export
 * @interface SearchResponse
 */
export interface SearchResponse {
    /**
     * 
     * @type {Array<SearchResponseDictItem>}
     * @memberof SearchResponse
     */
    asDicts?: Array<SearchResponseDictItem> | null;
    /**
     * 
     * @type {string}
     * @memberof SearchResponse
     */
    asString?: string | null;
    /**
     * 
     * @type {Offset3}
     * @memberof SearchResponse
     */
    offset?: Offset3 | null;
}

/**
 * Check if a given object implements the SearchResponse interface.
 */
export function instanceOfSearchResponse(value: object): value is SearchResponse {
    return true;
}

export function SearchResponseFromJSON(json: any): SearchResponse {
    return SearchResponseFromJSONTyped(json, false);
}

export function SearchResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): SearchResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'asDicts': json['as_dicts'] == null ? undefined : ((json['as_dicts'] as Array<any>).map(SearchResponseDictItemFromJSON)),
        'asString': json['as_string'] == null ? undefined : json['as_string'],
        'offset': json['offset'] == null ? undefined : Offset3FromJSON(json['offset']),
    };
}

export function SearchResponseToJSON(json: any): SearchResponse {
    return SearchResponseToJSONTyped(json, false);
}

export function SearchResponseToJSONTyped(value?: SearchResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'as_dicts': value['asDicts'] == null ? undefined : ((value['asDicts'] as Array<any>).map(SearchResponseDictItemToJSON)),
        'as_string': value['asString'],
        'offset': Offset3ToJSON(value['offset']),
    };
}

