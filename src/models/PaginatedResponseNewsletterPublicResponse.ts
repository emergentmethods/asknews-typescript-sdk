/* tslint:disable */
/* eslint-disable */
/**
 * AskNews API
 * AskNews API
 *
 * The version of the OpenAPI document: 0.22.7
 * Contact: contact@emergentmethods.ai
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { NewsletterPublicResponse } from './NewsletterPublicResponse';
import {
    NewsletterPublicResponseFromJSON,
    NewsletterPublicResponseFromJSONTyped,
    NewsletterPublicResponseToJSON,
    NewsletterPublicResponseToJSONTyped,
} from './NewsletterPublicResponse';

/**
 * 
 * @export
 * @interface PaginatedResponseNewsletterPublicResponse
 */
export interface PaginatedResponseNewsletterPublicResponse {
    /**
     * 
     * @type {Array<NewsletterPublicResponse>}
     * @memberof PaginatedResponseNewsletterPublicResponse
     */
    items: Array<NewsletterPublicResponse>;
    /**
     * 
     * @type {number}
     * @memberof PaginatedResponseNewsletterPublicResponse
     */
    count: number;
    /**
     * 
     * @type {number}
     * @memberof PaginatedResponseNewsletterPublicResponse
     */
    nextPage: number | null;
    /**
     * 
     * @type {number}
     * @memberof PaginatedResponseNewsletterPublicResponse
     */
    previousPage: number | null;
}

/**
 * Check if a given object implements the PaginatedResponseNewsletterPublicResponse interface.
 */
export function instanceOfPaginatedResponseNewsletterPublicResponse(value: object): value is PaginatedResponseNewsletterPublicResponse {
    if (!('items' in value) || value['items'] === undefined) return false;
    if (!('count' in value) || value['count'] === undefined) return false;
    if (!('nextPage' in value) || value['nextPage'] === undefined) return false;
    if (!('previousPage' in value) || value['previousPage'] === undefined) return false;
    return true;
}

export function PaginatedResponseNewsletterPublicResponseFromJSON(json: any): PaginatedResponseNewsletterPublicResponse {
    return PaginatedResponseNewsletterPublicResponseFromJSONTyped(json, false);
}

export function PaginatedResponseNewsletterPublicResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): PaginatedResponseNewsletterPublicResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'items': ((json['items'] as Array<any>).map(NewsletterPublicResponseFromJSON)),
        'count': json['count'],
        'nextPage': json['next_page'],
        'previousPage': json['previous_page'],
    };
}

export function PaginatedResponseNewsletterPublicResponseToJSON(json: any): PaginatedResponseNewsletterPublicResponse {
    return PaginatedResponseNewsletterPublicResponseToJSONTyped(json, false);
}

export function PaginatedResponseNewsletterPublicResponseToJSONTyped(value?: PaginatedResponseNewsletterPublicResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'items': ((value['items'] as Array<any>).map(NewsletterPublicResponseToJSON)),
        'count': value['count'],
        'next_page': value['nextPage'],
        'previous_page': value['previousPage'],
    };
}

