/* tslint:disable */
/* eslint-disable */
/**
 * AskNews API
 * AskNews API
 *
 * The version of the OpenAPI document: 0.22.8
 * Contact: contact@emergentmethods.ai
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ValidationErrorItem
 */
export interface ValidationErrorItem {
    /**
     * 
     * @type {Array<string>}
     * @memberof ValidationErrorItem
     */
    loc: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof ValidationErrorItem
     */
    msg: string;
    /**
     * 
     * @type {string}
     * @memberof ValidationErrorItem
     */
    type: string;
}

/**
 * Check if a given object implements the ValidationErrorItem interface.
 */
export function instanceOfValidationErrorItem(value: object): value is ValidationErrorItem {
    if (!('loc' in value) || value['loc'] === undefined) return false;
    if (!('msg' in value) || value['msg'] === undefined) return false;
    if (!('type' in value) || value['type'] === undefined) return false;
    return true;
}

export function ValidationErrorItemFromJSON(json: any): ValidationErrorItem {
    return ValidationErrorItemFromJSONTyped(json, false);
}

export function ValidationErrorItemFromJSONTyped(json: any, ignoreDiscriminator: boolean): ValidationErrorItem {
    if (json == null) {
        return json;
    }
    return {
        
        'loc': json['loc'],
        'msg': json['msg'],
        'type': json['type'],
    };
}

export function ValidationErrorItemToJSON(json: any): ValidationErrorItem {
    return ValidationErrorItemToJSONTyped(json, false);
}

export function ValidationErrorItemToJSONTyped(value?: ValidationErrorItem | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'loc': value['loc'],
        'msg': value['msg'],
        'type': value['type'],
    };
}

