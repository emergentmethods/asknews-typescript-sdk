/* tslint:disable */
/* eslint-disable */
/**
 * AskNews API
 * AskNews API
 *
 * The version of the OpenAPI document: 0.20.5
 * Contact: contact@emergentmethods.ai
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CreateDeepNewsResponseStreamChunk } from './CreateDeepNewsResponseStreamChunk';
import {
    CreateDeepNewsResponseStreamChunkFromJSON,
    CreateDeepNewsResponseStreamChunkFromJSONTyped,
    CreateDeepNewsResponseStreamChunkToJSON,
    CreateDeepNewsResponseStreamChunkToJSONTyped,
} from './CreateDeepNewsResponseStreamChunk';
import type { DeepNewsResponseSources } from './DeepNewsResponseSources';
import {
    DeepNewsResponseSourcesFromJSON,
    DeepNewsResponseSourcesFromJSONTyped,
    DeepNewsResponseSourcesToJSON,
    DeepNewsResponseSourcesToJSONTyped,
} from './DeepNewsResponseSources';
import type { DeepNewsResponseSources1 } from './DeepNewsResponseSources1';
import {
    DeepNewsResponseSources1FromJSON,
    DeepNewsResponseSources1FromJSONTyped,
    DeepNewsResponseSources1ToJSON,
    DeepNewsResponseSources1ToJSONTyped,
} from './DeepNewsResponseSources1';
import type { CreateDeepNewsResponseUsage } from './CreateDeepNewsResponseUsage';
import {
    CreateDeepNewsResponseUsageFromJSON,
    CreateDeepNewsResponseUsageFromJSONTyped,
    CreateDeepNewsResponseUsageToJSON,
    CreateDeepNewsResponseUsageToJSONTyped,
} from './CreateDeepNewsResponseUsage';
import type { CreateDeepNewsResponseChoice } from './CreateDeepNewsResponseChoice';
import {
    CreateDeepNewsResponseChoiceFromJSON,
    CreateDeepNewsResponseChoiceFromJSONTyped,
    CreateDeepNewsResponseChoiceToJSON,
    CreateDeepNewsResponseChoiceToJSONTyped,
} from './CreateDeepNewsResponseChoice';
import type { CreateDeepNewsResponseUsage1 } from './CreateDeepNewsResponseUsage1';
import {
    CreateDeepNewsResponseUsage1FromJSON,
    CreateDeepNewsResponseUsage1FromJSONTyped,
    CreateDeepNewsResponseUsage1ToJSON,
    CreateDeepNewsResponseUsage1ToJSONTyped,
} from './CreateDeepNewsResponseUsage1';
import type { CreateDeepNewsResponse } from './CreateDeepNewsResponse';
import {
    CreateDeepNewsResponseFromJSON,
    CreateDeepNewsResponseFromJSONTyped,
    CreateDeepNewsResponseToJSON,
    CreateDeepNewsResponseToJSONTyped,
} from './CreateDeepNewsResponse';
import type { CreateDeepNewsResponseChoice1 } from './CreateDeepNewsResponseChoice1';
import {
    CreateDeepNewsResponseChoice1FromJSON,
    CreateDeepNewsResponseChoice1FromJSONTyped,
    CreateDeepNewsResponseChoice1ToJSON,
    CreateDeepNewsResponseChoice1ToJSONTyped,
} from './CreateDeepNewsResponseChoice1';
import type { CreateDeepNewsResponseStreamSource } from './CreateDeepNewsResponseStreamSource';
import {
    CreateDeepNewsResponseStreamSourceFromJSON,
    CreateDeepNewsResponseStreamSourceFromJSONTyped,
    CreateDeepNewsResponseStreamSourceToJSON,
    CreateDeepNewsResponseStreamSourceToJSONTyped,
} from './CreateDeepNewsResponseStreamSource';

/**
 * 
 * @export
 * @interface CreateDeepNewsResponse1
 */
export interface CreateDeepNewsResponse1 {
    /**
     * 
     * @type {string}
     * @memberof CreateDeepNewsResponse1
     */
    id: string;
    /**
     * 
     * @type {number}
     * @memberof CreateDeepNewsResponse1
     */
    created: number;
    /**
     * 
     * @type {string}
     * @memberof CreateDeepNewsResponse1
     */
    object?: string;
    /**
     * 
     * @type {string}
     * @memberof CreateDeepNewsResponse1
     */
    model?: string;
    /**
     * 
     * @type {CreateDeepNewsResponseUsage1}
     * @memberof CreateDeepNewsResponse1
     */
    usage: CreateDeepNewsResponseUsage1;
    /**
     * 
     * @type {Array<CreateDeepNewsResponseChoice1>}
     * @memberof CreateDeepNewsResponse1
     */
    choices: Array<CreateDeepNewsResponseChoice1>;
    /**
     * 
     * @type {DeepNewsResponseSources1}
     * @memberof CreateDeepNewsResponse1
     */
    sources: DeepNewsResponseSources1;
}

/**
 * Check if a given object implements the CreateDeepNewsResponse1 interface.
 */
export function instanceOfCreateDeepNewsResponse1(value: object): value is CreateDeepNewsResponse1 {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('created' in value) || value['created'] === undefined) return false;
    if (!('usage' in value) || value['usage'] === undefined) return false;
    if (!('choices' in value) || value['choices'] === undefined) return false;
    if (!('sources' in value) || value['sources'] === undefined) return false;
    return true;
}

export function CreateDeepNewsResponse1FromJSON(json: any): CreateDeepNewsResponse1 {
    return CreateDeepNewsResponse1FromJSONTyped(json, false);
}

export function CreateDeepNewsResponse1FromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateDeepNewsResponse1 {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'created': json['created'],
        'object': json['object'] == null ? undefined : json['object'],
        'model': json['model'] == null ? undefined : json['model'],
        'usage': CreateDeepNewsResponseUsage1FromJSON(json['usage']),
        'choices': ((json['choices'] as Array<any>).map(CreateDeepNewsResponseChoice1FromJSON)),
        'sources': DeepNewsResponseSources1FromJSON(json['sources']),
    };
}

export function CreateDeepNewsResponse1ToJSON(json: any): CreateDeepNewsResponse1 {
    return CreateDeepNewsResponse1ToJSONTyped(json, false);
}

export function CreateDeepNewsResponse1ToJSONTyped(value?: CreateDeepNewsResponse1 | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'created': value['created'],
        'object': value['object'],
        'model': value['model'],
        'usage': CreateDeepNewsResponseUsage1ToJSON(value['usage']),
        'choices': ((value['choices'] as Array<any>).map(CreateDeepNewsResponseChoice1ToJSON)),
        'sources': DeepNewsResponseSources1ToJSON(value['sources']),
    };
}

