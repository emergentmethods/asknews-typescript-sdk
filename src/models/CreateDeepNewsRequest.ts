/* tslint:disable */
/* eslint-disable */
/**
 * AskNews API
 * AskNews API
 *
 * The version of the OpenAPI document: 0.22.10
 * Contact: contact@emergentmethods.ai
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { User } from './User';
import {
    UserFromJSON,
    UserFromJSONTyped,
    UserToJSON,
    UserToJSONTyped,
} from './User';
import type { CreateDeepNewsRequestMessage } from './CreateDeepNewsRequestMessage';
import {
    CreateDeepNewsRequestMessageFromJSON,
    CreateDeepNewsRequestMessageFromJSONTyped,
    CreateDeepNewsRequestMessageToJSON,
    CreateDeepNewsRequestMessageToJSONTyped,
} from './CreateDeepNewsRequestMessage';
import type { Stop } from './Stop';
import {
    StopFromJSON,
    StopFromJSONTyped,
    StopToJSON,
    StopToJSONTyped,
} from './Stop';
import type { FilterParams1 } from './FilterParams1';
import {
    FilterParams1FromJSON,
    FilterParams1FromJSONTyped,
    FilterParams1ToJSON,
    FilterParams1ToJSONTyped,
} from './FilterParams1';
import type { Sources1 } from './Sources1';
import {
    Sources1FromJSON,
    Sources1FromJSONTyped,
    Sources1ToJSON,
    Sources1ToJSONTyped,
} from './Sources1';
import type { ThreadId1 } from './ThreadId1';
import {
    ThreadId1FromJSON,
    ThreadId1FromJSONTyped,
    ThreadId1ToJSON,
    ThreadId1ToJSONTyped,
} from './ThreadId1';

/**
 * 
 * @export
 * @interface CreateDeepNewsRequest
 */
export interface CreateDeepNewsRequest {
    [key: string]: any | any;
    /**
     * 
     * @type {string}
     * @memberof CreateDeepNewsRequest
     */
    model?: string;
    /**
     * 
     * @type {Array<CreateDeepNewsRequestMessage>}
     * @memberof CreateDeepNewsRequest
     */
    messages: Array<CreateDeepNewsRequestMessage>;
    /**
     * 
     * @type {number}
     * @memberof CreateDeepNewsRequest
     */
    temperature?: number;
    /**
     * 
     * @type {number}
     * @memberof CreateDeepNewsRequest
     */
    topP?: number;
    /**
     * 
     * @type {number}
     * @memberof CreateDeepNewsRequest
     */
    n?: number;
    /**
     * 
     * @type {boolean}
     * @memberof CreateDeepNewsRequest
     */
    stream?: boolean;
    /**
     * 
     * @type {Stop}
     * @memberof CreateDeepNewsRequest
     */
    stop?: Stop;
    /**
     * 
     * @type {number}
     * @memberof CreateDeepNewsRequest
     */
    maxTokens?: number;
    /**
     * 
     * @type {number}
     * @memberof CreateDeepNewsRequest
     */
    presencePenalty?: number;
    /**
     * 
     * @type {number}
     * @memberof CreateDeepNewsRequest
     */
    frequencyPenalty?: number;
    /**
     * 
     * @type {User}
     * @memberof CreateDeepNewsRequest
     */
    user?: User;
    /**
     * 
     * @type {ThreadId1}
     * @memberof CreateDeepNewsRequest
     */
    threadId?: ThreadId1;
    /**
     * 
     * @type {string}
     * @memberof CreateDeepNewsRequest
     */
    inlineCitations?: CreateDeepNewsRequestInlineCitationsEnum;
    /**
     * 
     * @type {boolean}
     * @memberof CreateDeepNewsRequest
     */
    appendReferences?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CreateDeepNewsRequest
     */
    journalistMode?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CreateDeepNewsRequest
     */
    asknewsWatermark?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CreateDeepNewsRequest
     */
    conversationalAwareness?: boolean;
    /**
     * 
     * @type {FilterParams1}
     * @memberof CreateDeepNewsRequest
     */
    filterParams?: FilterParams1;
    /**
     * 
     * @type {number}
     * @memberof CreateDeepNewsRequest
     */
    searchDepth?: number;
    /**
     * 
     * @type {number}
     * @memberof CreateDeepNewsRequest
     */
    maxDepth?: number;
    /**
     * 
     * @type {Sources1}
     * @memberof CreateDeepNewsRequest
     */
    sources?: Sources1;
    /**
     * 
     * @type {boolean}
     * @memberof CreateDeepNewsRequest
     */
    returnSources?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CreateDeepNewsRequest
     */
    includeCoordinates?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CreateDeepNewsRequest
     */
    includeEntities?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CreateDeepNewsRequest
     */
    includeGraphs?: boolean;
}


/**
 * @export
 */
export const CreateDeepNewsRequestInlineCitationsEnum = {
    Numbered: 'numbered',
    MarkdownLink: 'markdown_link',
    None: 'none'
} as const;
export type CreateDeepNewsRequestInlineCitationsEnum = typeof CreateDeepNewsRequestInlineCitationsEnum[keyof typeof CreateDeepNewsRequestInlineCitationsEnum];


/**
 * Check if a given object implements the CreateDeepNewsRequest interface.
 */
export function instanceOfCreateDeepNewsRequest(value: object): value is CreateDeepNewsRequest {
    if (!('messages' in value) || value['messages'] === undefined) return false;
    return true;
}

export function CreateDeepNewsRequestFromJSON(json: any): CreateDeepNewsRequest {
    return CreateDeepNewsRequestFromJSONTyped(json, false);
}

export function CreateDeepNewsRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateDeepNewsRequest {
    if (json == null) {
        return json;
    }
    return {
        
            ...json,
        'model': json['model'] == null ? undefined : json['model'],
        'messages': ((json['messages'] as Array<any>).map(CreateDeepNewsRequestMessageFromJSON)),
        'temperature': json['temperature'] == null ? undefined : json['temperature'],
        'topP': json['top_p'] == null ? undefined : json['top_p'],
        'n': json['n'] == null ? undefined : json['n'],
        'stream': json['stream'] == null ? undefined : json['stream'],
        'stop': json['stop'] == null ? undefined : StopFromJSON(json['stop']),
        'maxTokens': json['max_tokens'] == null ? undefined : json['max_tokens'],
        'presencePenalty': json['presence_penalty'] == null ? undefined : json['presence_penalty'],
        'frequencyPenalty': json['frequency_penalty'] == null ? undefined : json['frequency_penalty'],
        'user': json['user'] == null ? undefined : UserFromJSON(json['user']),
        'threadId': json['thread_id'] == null ? undefined : ThreadId1FromJSON(json['thread_id']),
        'inlineCitations': json['inline_citations'] == null ? undefined : json['inline_citations'],
        'appendReferences': json['append_references'] == null ? undefined : json['append_references'],
        'journalistMode': json['journalist_mode'] == null ? undefined : json['journalist_mode'],
        'asknewsWatermark': json['asknews_watermark'] == null ? undefined : json['asknews_watermark'],
        'conversationalAwareness': json['conversational_awareness'] == null ? undefined : json['conversational_awareness'],
        'filterParams': json['filter_params'] == null ? undefined : FilterParams1FromJSON(json['filter_params']),
        'searchDepth': json['search_depth'] == null ? undefined : json['search_depth'],
        'maxDepth': json['max_depth'] == null ? undefined : json['max_depth'],
        'sources': json['sources'] == null ? undefined : Sources1FromJSON(json['sources']),
        'returnSources': json['return_sources'] == null ? undefined : json['return_sources'],
        'includeCoordinates': json['include_coordinates'] == null ? undefined : json['include_coordinates'],
        'includeEntities': json['include_entities'] == null ? undefined : json['include_entities'],
        'includeGraphs': json['include_graphs'] == null ? undefined : json['include_graphs'],
    };
}

export function CreateDeepNewsRequestToJSON(json: any): CreateDeepNewsRequest {
    return CreateDeepNewsRequestToJSONTyped(json, false);
}

export function CreateDeepNewsRequestToJSONTyped(value?: CreateDeepNewsRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
            ...value,
        'model': value['model'],
        'messages': ((value['messages'] as Array<any>).map(CreateDeepNewsRequestMessageToJSON)),
        'temperature': value['temperature'],
        'top_p': value['topP'],
        'n': value['n'],
        'stream': value['stream'],
        'stop': StopToJSON(value['stop']),
        'max_tokens': value['maxTokens'],
        'presence_penalty': value['presencePenalty'],
        'frequency_penalty': value['frequencyPenalty'],
        'user': UserToJSON(value['user']),
        'thread_id': ThreadId1ToJSON(value['threadId']),
        'inline_citations': value['inlineCitations'],
        'append_references': value['appendReferences'],
        'journalist_mode': value['journalistMode'],
        'asknews_watermark': value['asknewsWatermark'],
        'conversational_awareness': value['conversationalAwareness'],
        'filter_params': FilterParams1ToJSON(value['filterParams']),
        'search_depth': value['searchDepth'],
        'max_depth': value['maxDepth'],
        'sources': Sources1ToJSON(value['sources']),
        'return_sources': value['returnSources'],
        'include_coordinates': value['includeCoordinates'],
        'include_entities': value['includeEntities'],
        'include_graphs': value['includeGraphs'],
    };
}

